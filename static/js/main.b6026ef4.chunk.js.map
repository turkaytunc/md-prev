{"version":3,"sources":["components/markdown-input/MarkdownInput.js","components/markdown-preview/MarkdownPreview.js","initialState.js","App.js","index.js"],"names":["MarkdownInput","setAppCompInput","getAppInput","value","onChange","event","target","handleInput","className","placeholder","MarkdownPreview","md","htm","parse","initialState","App","convertToMd","MarkdownIt","breaks","html","highlight","str","lang","hljs","getLanguage","__","React","useState","appInput","setAppInput","setMd","convertToMarkdown","input","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"oPAGaA,G,YAAgB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAK/C,OACE,8BACEC,MAAOD,EACPE,SAAU,SAACC,GAAD,OAPM,SAACA,GACnBJ,EAAgBI,EAAMC,OAAOH,OAMNI,CAAYF,IACjCG,UAAU,SACVC,YAAW,+B,iBCTJC,G,MAAkB,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC5BC,EAAMC,IAAMF,GAChB,OAAO,yBAAKH,UAAU,WAAWI,K,iCCNtBE,EAAY,+zBCqDVC,MA7Cf,WACE,IAQIC,EAAc,IAAIC,IAAW,CAC/BC,QAAQ,EACRC,MAAM,EACNC,UAXqB,SAACC,EAAKC,GAC3B,GAAIA,GAAQC,IAAKC,YAAYF,GAC3B,IACE,OAAOC,IAAKH,UAAUE,EAAMD,GAAKlB,MACjC,MAAOsB,IAEX,MAAO,MAPI,EAcmBC,IAAMC,SAASb,GAdlC,mBAcNc,EAdM,KAcIC,EAdJ,OAeOH,IAAMC,SAAS,IAftB,mBAeNhB,EAfM,KAeFmB,EAfE,KAsBPC,EAAoB,SAACC,EAAOhB,GAEhC,OADqBA,EAAYiB,OAAOD,IAQ1C,MAJW,KAAPrB,GACFmB,EAAMC,EAAkBjB,EAAcE,IAItC,yBAAKR,UAAU,OACb,yBAAKA,UAAU,cAAf,sBACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CACEP,gBAnBgB,SAAC+B,GACvBH,EAAYG,GACZF,EAAMC,EAAkBC,EAAOhB,KAkBzBd,YAAa0B,IAEf,kBAAC,EAAD,CAAiBjB,GAAIA,OC1C7BuB,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b6026ef4.chunk.js","sourcesContent":["import React from 'react';\nimport './markdown-input.scss';\n\nexport const MarkdownInput = ({ setAppCompInput, getAppInput }) => {\n  const handleInput = (event) => {\n    setAppCompInput(event.target.value);\n  };\n\n  return (\n    <textarea\n      value={getAppInput}\n      onChange={(event) => handleInput(event)}\n      className=\"editor\"\n      placeholder={`# Type markdown here! \\n`}\n    ></textarea>\n  );\n};\n","import React from 'react';\nimport parse from 'html-react-parser';\nimport './markdown-preview.scss';\n\nexport const MarkdownPreview = ({ md }) => {\n  let htm = parse(md);\n  return <div className=\"preview\">{htm}</div>;\n};\n","export const initialState = `# h1 Heading\n## h2 Heading \n\n## Horizontal Rules\n___\n---\n***\n\n## Emphasis and Bold\n\n**This is bold text**\n_This is italic text_\n~~Strikethrough~~\n\n## Lists\n\nUnordered\n- Create a list by starting a line with \\`+\\`\n+ or \\`-\\`\n* or \\`*\\`\n\nOrdered\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n\n## Code\n\n\\`\\`\\` js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\\`\\`\\`\n\n## Links\n[link text](https://github.com/turkaytunc/md-prev)\n\n## Images\n![logo](https://github.com/turkaytunc/md-prev/blob/main/public/tr.png?raw=true)  \n![logo](https://github.com/turkaytunc/md-prev/blob/main/public/logo192.png?raw=true)    `;\n","import React from 'react';\nimport './app.scss';\nimport { MarkdownInput } from './components/markdown-input/MarkdownInput';\nimport { MarkdownPreview } from './components/markdown-preview/MarkdownPreview';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport { initialState } from './initialState';\n\nfunction App() {\n  const highlightCodes = (str, lang) => {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str).value;\n      } catch (__) {}\n    }\n    return '';\n  };\n  let convertToMd = new MarkdownIt({\n    breaks: true,\n    html: true,\n    highlight: highlightCodes,\n  });\n  const [appInput, setAppInput] = React.useState(initialState);\n  const [md, setMd] = React.useState('');\n\n  const setAppCompInput = (input) => {\n    setAppInput(input);\n    setMd(convertToMarkdown(input, convertToMd));\n  };\n\n  const convertToMarkdown = (input, convertToMd) => {\n    let convertedValue = convertToMd.render(input);\n    return convertedValue;\n  };\n\n  if (md === '') {\n    setMd(convertToMarkdown(initialState, convertToMd));\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-header\">Markdown Previewer</div>\n      <div className=\"md-io-wrapper\">\n        <MarkdownInput\n          setAppCompInput={setAppCompInput}\n          getAppInput={appInput}\n        />\n        <MarkdownPreview md={md} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}